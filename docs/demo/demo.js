(()=>{"use strict";var e,t=createjs.Bitmap,n=createjs.Shape,i=createjs.Point;class o extends t{constructor(e,t){super(document.createElement("canvas")),this.isDrawing=!1,this.onStartStroke=e=>{this.points.set(e.pointerID,new i(e.localX,e.localY))},this.onStroke=e=>{const t=this.points.get(e.pointerID);if(null==t)return;this.updateStrokeStyle();const n=this.ctx;n.beginPath(),n.moveTo(t.x,t.y),n.lineTo(e.localX,e.localY),n.closePath(),n.stroke(),this.points.set(e.pointerID,new i(e.localX,e.localY))},this.onFinishStroke=e=>{this.points.delete(e.pointerID)},this.canvas.width=e,this.canvas.height=t,this.points=new Map,this.clear(),this.initHitArea()}initHitArea(){const e=new n;e.graphics.beginFill("#000").drawRect(-this.regX,-this.regY,this.canvas.width,this.canvas.height).endFill(),this.hitArea=e}restoreImage(e,t="no-cors"){const n=new Request(e,{method:"GET",mode:t});fetch(n).then((e=>e.blob())).then((e=>{this.drawImage(e)}))}isImageType(e){switch(e.type){case"image/jpeg":case"image/png":return!0}return!1}drawImage(e){if(!this.isImageType(e))return;this.clear();const t=new Image;t.onload=()=>{this.ctx.drawImage(t,0,0)},t.src=URL.createObjectURL(e)}changeMode(e){this.option=e;const t=this.ctx;null==this.option.color&&(this.option.color=t.strokeStyle),null==this.option.width&&(this.option.width=t.lineWidth),t.strokeStyle=this.option.color,t.lineWidth=this.option.width}startDrawing(e){this.changeMode(e),this.isDrawing||(this.isDrawing=!0,this.addEventListener("mousedown",this.onStartStroke),this.addEventListener("pressmove",this.onStroke),this.addEventListener("pressup",this.onFinishStroke))}finishDrawing(){this.isDrawing&&(this.isDrawing=!1,this.removeEventListener("mousedown",this.onStartStroke),this.removeEventListener("pressmove",this.onStroke),this.removeEventListener("pressup",this.onFinishStroke))}updateStrokeStyle(){const t=this.ctx;switch(this.option.mode){case e.pen:t.globalCompositeOperation="source-over";break;case e.eraser:t.globalCompositeOperation="destination-out"}t.strokeStyle=this.option.color,t.lineWidth=this.option.width,t.lineCap="round",t.lineJoin="round"}clear(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.points.clear(),this.ctx.beginPath()}get canvas(){return this.image}get ctx(){return this.canvas.getContext("2d")}}let a,s;!function(e){e.pen="pen",e.eraser="eraser"}(e||(e={}));const r='input[name="mode"]',c='input[name="color"]',h='input[name="width"]',l=()=>{document.body.innerHTML='\n  <canvas id="appCanvas" width="640" height="480"></canvas>\n    <p>\n      mode:\n      <label><input type="radio" name="mode" value="pen" checked />pen</label>\n      <label><input type="radio" name="mode" value="eraser" />eraser</label>\n    </p>\n    <p>\n        color:\n        <label><input type="color" name="color" value="#ff00ff" /></label>\n    </p>\n    <p>\n        width:\n        <label><input type="number" name="width" min="1" max="20" value="8" /></label>\n    </p>\n    <p>\n        <input type="button" name="clearButton" value="Clear"/>\n    </p>',d();const e=document.getElementById("appCanvas");a=new createjs.Stage(e),a.enableMouseOver(),createjs.Touch.enable(a),createjs.Ticker.on("tick",(()=>{a.update()})),p(),u(),s.restoreImage("./img01.png")},d=()=>{document.querySelectorAll(r).forEach((e=>{e.onchange=e=>{s.startDrawing({mode:e.target.value})}})),document.querySelector(c).onchange=e=>{s.startDrawing({color:e.target.value})},document.querySelector(h).onchange=e=>{s.startDrawing({width:e.target.value})},document.querySelector('input[name="clearButton"]').onclick=e=>{s.clear()}},p=()=>{s=new o(640,480),a.addChild(s)},u=()=>{const e=document.querySelector(r+":checked").value,t=document.querySelector(c).value,n=document.querySelector(h).value;s.startDrawing({mode:e,color:t,width:n})};"loading"!==document.readyState?l():document.addEventListener("DOMContentLoaded",l)})();